{"ast":null,"code":"var _jsxFileName = \"/Users/momyida/Downloads/FitnessTrackrFrontEnd/src/Components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { fetchUserData } from \"../util\";\nimport \"./RegisterLogin.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    setToken,\n    setIsLoggedIn,\n    isLoggedIn,\n    setCurrentUser\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showCredentialsError, setShowCredentialsError] = useState(false);\n  const [loginError, setLoginError] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (isLoggedIn) navigate(\"/account\");\n  }, []);\n\n  const submitAccountInfo = async event => {\n    event.preventDefault();\n    const response = await fetch(\"https://fitnesstrac-kr.herokuapp.com/api/users/login\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    });\n\n    if (response.ok) {\n      const result = await response.json();\n      const token = result.token;\n      setToken(token);\n      setIsLoggedIn(true);\n      const userData = await fetchUserData(token);\n      setCurrentUser(userData.username);\n      setShowCredentialsError(false);\n      navigate(\"/account\");\n    } else {\n      console.error;\n      const errorMessage = \"login\" ? \"Incorrect username and password combination.\" : \"Username already taken.\";\n      setLoginError(errorMessage);\n      setShowCredentialsError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitAccountInfo,\n        className: \"registerLoginForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pageName\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          placeholder: \"username\",\n          minLength: \"8\",\n          onChange: event => {\n            setUsername(event.target.value);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"password\",\n          minLength: \"8\",\n          onChange: event => {\n            setPassword(event.target.value);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), showCredentialsError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: loginError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 34\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registerLink\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 53\n          }, this), \" Sign up!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"QY3YNPogvCzUnWtHM4U8cBMOd3M=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/momyida/Downloads/FitnessTrackrFrontEnd/src/Components/Login.js"],"names":["React","useState","useEffect","useNavigate","Link","fetchUserData","Login","setToken","setIsLoggedIn","isLoggedIn","setCurrentUser","username","setUsername","password","setPassword","showCredentialsError","setShowCredentialsError","loginError","setLoginError","navigate","submitAccountInfo","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","result","json","token","userData","console","error","errorMessage","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { fetchUserData } from \"../util\";\nimport \"./RegisterLogin.css\";\n\nconst Login = ({setToken, setIsLoggedIn, isLoggedIn, setCurrentUser}) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showCredentialsError, setShowCredentialsError] = useState(false);\n  const [loginError, setLoginError] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isLoggedIn) navigate(\"/account\")\n  }, []);\n\n  const submitAccountInfo = async (event) => {\n    event.preventDefault();\n    const response = await fetch(\"https://fitnesstrac-kr.herokuapp.com/api/users/login\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n          username: username,\n          password: password,\n      })\n    })\n    if (response.ok) {\n      const result = await response.json();\n      const token = result.token;\n      setToken(token);\n      setIsLoggedIn(true);\n      const userData = await fetchUserData(token);\n      setCurrentUser(userData.username);\n      setShowCredentialsError(false);\n      navigate(\"/account\");\n    } else {\n      console.error;\n      const errorMessage = \"login\" ? \"Incorrect username and password combination.\" : \"Username already taken.\"\n      setLoginError(errorMessage);\n      setShowCredentialsError(true);\n    }\n  }\n\n    return <>\n    <div className=\"loginForm\">\n      <form onSubmit={submitAccountInfo} className=\"registerLoginForm\">\n      <h1 className=\"pageName\">Login</h1>\n        <input type=\"text\" id=\"username\" placeholder=\"username\" minLength=\"8\" onChange={\n            (event) => {setUsername(event.target.value)}} required/>\n        <input type=\"password\" id=\"password\" placeholder=\"password\" minLength=\"8\" onChange={\n            (event) => {setPassword(event.target.value)}} required/>\n        { showCredentialsError ? <div className=\"error\">{loginError}</div> : null }\n        <button type=\"submit\">Login</button>\n        \n      </form>\n\n      <div className=\"registerLink\">\n        <Link to=\"/register\">Don't have an account? <br /> Sign up!</Link>\n      </div>\n    </div>\n  </>\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}