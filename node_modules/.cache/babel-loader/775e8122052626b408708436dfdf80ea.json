{"ast":null,"code":"var _jsxFileName = \"/Users/momyida/Downloads/FitnessTrackrFrontEnd/src/Components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { fetchUserData } from \"../util\";\nimport \"./RegisterLogin.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = _ref => {\n  _s();\n\n  let {\n    setToken,\n    setIsLoggedIn,\n    isLoggedIn,\n    setCurrentUser\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [showCredentialsError, setShowCredentialsError] = useState(false);\n  const [registerError, setRegisterError] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (isLoggedIn) navigate(\"/Account\");\n  }, []);\n\n  const createAccount = async event => {\n    event.preventDefault();\n    const response = await fetch(\"https://fitnesstrac-kr.herokuapp.com/api/users/register\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    });\n\n    if (response.ok) {\n      console.log(response);\n      const result = await response.json();\n      console.log(result);\n      const token = result.token;\n      setToken(token);\n      setIsLoggedIn(true);\n      const userData = await fetchUserData(token);\n      setCurrentUser(userData.data);\n      navigate(\"/Account\");\n    } else {\n      console.error;\n      const errorMessage = \"login\" && \"Username already taken.\";\n      setRegisterError(errorMessage);\n      setShowCredentialsError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"pageName\",\n      children: \"REGISTER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createAccount,\n      className: \"registerLoginForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        id: \"username\",\n        placeholder: \"username\",\n        minLength: \"8\",\n        onChange: event => {\n          setUsername(event.target.value);\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        id: \"password\",\n        placeholder: \"password\",\n        minLength: \"8\",\n        onChange: event => {\n          setPassword(event.target.value);\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confirmPassword,\n        id: \"confirm_password\",\n        name: \"confirm_password\",\n        placeholder: \"confirm password\",\n        onChange: event => {\n          setConfirmPassword(event.target.value);\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), password !== confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Passwords do not match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 42\n      }, this), showCredentialsError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: registerError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 34\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Register, \"oONtvy4AjQmo+CxaT2Ta7LB94II=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/momyida/Downloads/FitnessTrackrFrontEnd/src/Components/Register.js"],"names":["React","useState","useEffect","useNavigate","fetchUserData","Register","setToken","setIsLoggedIn","isLoggedIn","setCurrentUser","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","showCredentialsError","setShowCredentialsError","registerError","setRegisterError","navigate","createAccount","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","console","log","result","json","token","userData","data","error","errorMessage","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { fetchUserData } from \"../util\";\nimport \"./RegisterLogin.css\";\n\nconst Register = ({setToken, setIsLoggedIn, isLoggedIn, setCurrentUser}) => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [showCredentialsError, setShowCredentialsError] = useState(false);\n    const [registerError, setRegisterError] = useState(\"\");\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n      if (isLoggedIn) navigate(\"/Account\")\n    }, []);\n\n    const createAccount = async (event) => {\n      event.preventDefault();\n      const response = await fetch(\"https://fitnesstrac-kr.herokuapp.com/api/users/register\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            username: username,\n            password: password,\n        })\n      })\n    if (response.ok) {\n      console.log(response);\n      const result = await response.json();\n      console.log(result);\n      const token = result.token;\n      setToken(token);\n      setIsLoggedIn(true);\n      const userData = await fetchUserData(token);\n      setCurrentUser(userData.data);\n      navigate(\"/Account\");\n    } else {\n      console.error;\n      const errorMessage = \"login\" && \"Username already taken.\"\n      setRegisterError(errorMessage);\n      setShowCredentialsError(true);\n    }\n  }\n\n    return <>\n    <h1 className=\"pageName\">REGISTER</h1>\n      <form onSubmit={createAccount} className=\"registerLoginForm\">\n        <input type=\"text\" value={username} id=\"username\" placeholder=\"username\" minLength=\"8\" onChange={\n          (event) => {setUsername(event.target.value)}} required/>\n        <input type=\"password\" value={password} id=\"password\" placeholder=\"password\" minLength=\"8\" onChange={\n          (event) => {setPassword(event.target.value)}} required/>\n        <input type=\"password\" value={confirmPassword} id=\"confirm_password\" name= \"confirm_password\" placeholder=\"confirm password\" onChange={\n          (event) => {setConfirmPassword(event.target.value)}} required/>\n        {password !== confirmPassword && <div>Passwords do not match</div>}\n        { showCredentialsError ? <div className=\"error\">{registerError}</div> : null }\n        <button type=\"submit\">Create Account</button>\n      </form>\n    </>\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}