{"ast":null,"code":"var _jsxFileName = \"/Users/momyida/Downloads/FitnessTrackrFrontEnd/src/Components/Routines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { fetchPublicRoutinesFeaturingActivity, fetchPublicRoutinesByUser, deleteUserRoutine, updateMyRoutine } from \"../util\";\nimport \"./Routines.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Routines = _ref => {\n  _s();\n\n  let {\n    currentUser,\n    token\n  } = _ref;\n  const [routines, setRoutines] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchTerm = searchParams.get(\"searchTerm\");\n\n  const fetchRoutines = async () => {\n    try {\n      const response = await fetch(`https://fitnesstrac-kr.herokuapp.com/api/routines`);\n      const result = await response.json();\n      if (result.error) throw result.error;\n      setRoutines(result);\n    } catch (error) {\n      console.log(\"Trouble gathering routines!\".error);\n    }\n\n    ;\n  };\n\n  useEffect(fetchRoutines, []);\n\n  const searchRoutines = (routine, text) => {\n    text = text.toLowerCase();\n    const {\n      name,\n      goal,\n      creatorName\n    } = routine;\n\n    for (const field of [name, goal, creatorName]) {\n      if (field.toLowerCase().includes(text)) {\n        return true;\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  const filteredRoutines = searchTerm ? routines.filter(routine => searchRoutines(routine, searchTerm)) : routines; //Logging the proper routines, but the filter is not functioning properly.\n\n  const handleFetchPublicRoutinesFeaturingActivity = async activityId => {\n    await fetchPublicRoutinesFeaturingActivity(activityId);\n    const routinesWithActivities = routines.filter(routine => activityId === routine.id);\n    console.log(routines);\n    console.log(activityId);\n    setRoutines(routinesWithActivities);\n  };\n\n  const handlePublicRoutinesByUser = async username => {\n    await fetchPublicRoutinesByUser(username);\n    const userRoutines = routines.filter(routine => username === routine.creatorName);\n    setRoutines(userRoutines);\n  };\n\n  const handleDelete = async (token, routineId) => {\n    await deleteUserRoutine(token, routineId);\n    const newRoutines = routines.filter(routine => routineId !== routine.id);\n    setRoutines(newRoutines);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"pageName\",\n      children: \" Routines! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"facilitate\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"searchbar\",\n        type: \"text\",\n        name: \"search\",\n        placeholder: \"Search Routines, Goals, or Creators!\",\n        value: searchTerm || \"\",\n        onChange: event => {\n          setSearchParams({\n            searchTerm: event.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"createLink\",\n        to: \"/newroutine\",\n        children: \"Create a New Routine?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"individualRoutinesContainer\",\n      children: filteredRoutines && filteredRoutines.length ? filteredRoutines.map(routine => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"individualRoutines animate__animated animate__fadeInLeft\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \" Name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 35\n            }, this), routine.name.toUpperCase()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 84\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \" Goal: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 35\n            }, this), routine.goal]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 70\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \" Creator: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `${routine.creatorName}/routines`,\n              onClick: event => {\n                event.preventDefault();\n                const specificCreatorRoutines = handlePublicRoutinesByUser(routine.creatorName);\n                fetchRoutines(specificCreatorRoutines);\n              },\n              children: routine.creatorName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), routine.activities.map(activity => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Activity: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `${activity.id}/routines`,\n                onClick: event => {\n                  event.preventDefault();\n                  const routinesFeaturingActivity = handleFetchPublicRoutinesFeaturingActivity(activity.id);\n                  fetchRoutines(routinesFeaturingActivity);\n                },\n                children: activity.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 70\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Description: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 41\n              }, this), activity.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 83\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Duration: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 41\n              }, this), activity.duration, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 77\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Count: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 41\n              }, this), activity.count, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 71\n              }, this)]\n            }, activity.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userButtons\",\n            children: [currentUser === routine.creatorName ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"deleteButton\",\n              onClick: () => handleDelete(token, routine.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 73\n            }, this) : null, currentUser === routine.creatorName ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"updateButton\",\n              onClick: () => updateMyRoutine(token, routine),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 73\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)]\n        }, routine.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Routines, \"IOsAQFczU9KJa2iaLXbwdXvvxvw=\", false, function () {\n  return [useSearchParams];\n});\n\n_c = Routines;\nexport default Routines;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routines\");","map":{"version":3,"sources":["/Users/momyida/Downloads/FitnessTrackrFrontEnd/src/Components/Routines.js"],"names":["React","useState","useEffect","Link","useSearchParams","fetchPublicRoutinesFeaturingActivity","fetchPublicRoutinesByUser","deleteUserRoutine","updateMyRoutine","Routines","currentUser","token","routines","setRoutines","searchParams","setSearchParams","searchTerm","get","fetchRoutines","response","fetch","result","json","error","console","log","searchRoutines","routine","text","toLowerCase","name","goal","creatorName","field","includes","filteredRoutines","filter","handleFetchPublicRoutinesFeaturingActivity","activityId","routinesWithActivities","id","handlePublicRoutinesByUser","username","userRoutines","handleDelete","routineId","newRoutines","event","target","value","length","map","toUpperCase","preventDefault","specificCreatorRoutines","activities","activity","routinesFeaturingActivity","description","duration","count"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { fetchPublicRoutinesFeaturingActivity, fetchPublicRoutinesByUser, deleteUserRoutine, updateMyRoutine } from \"../util\";\nimport \"./Routines.css\";\n\nconst Routines = ({ currentUser, token }) => {\n    const [routines, setRoutines] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const searchTerm = searchParams.get(\"searchTerm\");\n\n    const fetchRoutines = async () => {\n        try {\n            const response = await fetch(`https://fitnesstrac-kr.herokuapp.com/api/routines`);\n            const result = await response.json();\n            if (result.error) throw result.error;\n            setRoutines(result);\n        } catch (error) {\n            console.log(\"Trouble gathering routines!\". error);\n        };\n    };\n\n    useEffect(fetchRoutines, []);\n\n    const searchRoutines = (routine, text) => {\n        text = text.toLowerCase();\n        const {name, goal, creatorName} = routine;\n        for (const field of [name, goal, creatorName]) {\n            if(field.toLowerCase().includes(text)) {\n                return true;\n            };\n        };\n    };\n\n    const filteredRoutines = searchTerm ? routines.filter(routine => searchRoutines(routine, searchTerm)) : routines;\n\n    //Logging the proper routines, but the filter is not functioning properly.\n    const handleFetchPublicRoutinesFeaturingActivity = async (activityId) => {\n        await fetchPublicRoutinesFeaturingActivity(activityId)\n        const routinesWithActivities = routines.filter((routine) => activityId === routine.id)\n        console.log(routines)\n        console.log(activityId)\n        setRoutines(routinesWithActivities)\n    };\n\n    const handlePublicRoutinesByUser = async (username) => {\n        await fetchPublicRoutinesByUser(username)\n        const userRoutines = routines.filter((routine) => username === routine.creatorName)\n        setRoutines(userRoutines)\n    };\n\n    const handleDelete = async (token, routineId) => {\n        await deleteUserRoutine(token, routineId)\n        const newRoutines = routines.filter((routine) => routineId !== routine.id)\n        setRoutines(newRoutines)\n    };\n\n    return <>\n        <h1 className=\"pageName\"> Routines! </h1>\n            <div className=\"facilitate\">\n                <input className=\"searchbar\" type=\"text\" name=\"search\" placeholder=\"Search Routines, Goals, or Creators!\" value={searchTerm || \"\"}  onChange={(event) => {\n                    setSearchParams({searchTerm:event.target.value})\n                }}/>\n                <Link className=\"createLink\" to=\"/newroutine\">Create a New Routine?</Link>\n            </div>\n            <div className=\"individualRoutinesContainer\"> \n                { filteredRoutines && filteredRoutines.length\n                    ? filteredRoutines.map((routine) => {\n                    return (\n                        <div className=\"individualRoutines animate__animated animate__fadeInLeft\" key={routine.id}>\n                            <span><b> Name: </b>{routine.name.toUpperCase()}</span><br />\n                            <span><b> Goal: </b>{routine.goal}</span><br />\n                            <span><b> Creator: </b>                            \n                                <Link to={`${routine.creatorName}/routines`} onClick={(event) => {\n                                    event.preventDefault();\n                                    const specificCreatorRoutines = handlePublicRoutinesByUser(routine.creatorName)\n                                    fetchRoutines(specificCreatorRoutines)\n                                }}>{routine.creatorName}</Link></span>\n                            {routine.activities.map((activity) => {\n                                return (\n                                    <div key={activity.id}>\n                                        <b>Activity: </b>\n                                            <Link to={`${activity.id}/routines`} onClick={(event) => {\n                                                event.preventDefault();\n                                                const routinesFeaturingActivity = handleFetchPublicRoutinesFeaturingActivity(activity.id)\n                                                fetchRoutines(routinesFeaturingActivity);\n                                            }}>{activity.name}</Link><br />\n                                        <b>Description: </b>{activity.description}<br />\n                                        <b>Duration: </b>{activity.duration}<br />\n                                        <b>Count: </b>{activity.count}<br />\n                                    </div>\n                                )\n                            })}\n                            <div className=\"userButtons\">\n                                { currentUser === routine.creatorName ? <button className=\"deleteButton\" onClick={() => handleDelete(token, routine.id)}>Delete</button> : null }\n                                { currentUser === routine.creatorName ? <button className=\"updateButton\" onClick={() => updateMyRoutine(token, routine)}>Update</button> : null }\n                            </div>\n                        </div>\n                    )\n                    })\n                :null\n                }\n            </div>\n    </>\n}\n\nexport default Routines;"]},"metadata":{},"sourceType":"module"}