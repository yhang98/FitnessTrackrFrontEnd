{"ast":null,"code":"var _jsxFileName = \"/Users/momyida/Downloads/FitnessTrackrFrontEnd/src/Components/NewRoutine.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport \"./NewItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewRoutine = _ref => {\n  _s();\n\n  let {\n    token,\n    isLoggedIn\n  } = _ref;\n  const blankRoutine = {\n    name: \"\",\n    goal: \"\"\n  };\n  const [routine, setRoutine] = useState(blankRoutine);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!isLoggedIn) navigate(\"/login\");\n  }, []);\n\n  const createRoutine = async event => {\n    event.preventDefault();\n    const response = await fetch(\"http://fitnesstrac-kr.herokuapp.com/api/routines\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        name: routine.name,\n        goal: routine.goal,\n        isPublic: true\n      })\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n      navigate(\"/routines\");\n    }).catch(console.error);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"pageName\",\n      children: \"Create a new routine!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"createForm\",\n      onSubmit: createRoutine,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: routine.name,\n        placeholder: \"Name of New Routine\",\n        minLength: \"1\",\n        required: true,\n        onChange: event => {\n          setRoutine({ ...routine,\n            name: event.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"goal\",\n        value: routine.goal,\n        placeholder: \"What is the goal?\",\n        minLength: \"1\",\n        required: true,\n        onChange: event => {\n          setRoutine({ ...routine,\n            goal: event.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewRoutine, \"xvio05xQgDqxt43fIim1t7W0YyM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = NewRoutine;\nexport default NewRoutine;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewRoutine\");","map":{"version":3,"sources":["/Users/momyida/Downloads/FitnessTrackrFrontEnd/src/Components/NewRoutine.js"],"names":["React","useState","useEffect","useNavigate","NewRoutine","token","isLoggedIn","blankRoutine","name","goal","routine","setRoutine","navigate","createRoutine","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","isPublic","then","json","result","console","log","catch","error","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAO,eAAP;;;;AAEA,MAAMC,UAAU,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAwB;AAC1C,QAAMC,YAAY,GAAG;AAACC,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAArB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAACM,YAAD,CAAtC;AACA,QAAMK,QAAQ,GAAGT,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACI,UAAJ,EAAgBM,QAAQ,CAAC,QAAD,CAAR;AACnB,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMC,aAAa,GAAG,MAAOC,KAAP,IAAiB;AACrCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kDAAD,EAAqD;AAC/EC,MAAAA,MAAM,EAAE,MADuE;AAE/EC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,yBAAkB,UAASd,KAAM;AAF1B,OAFsE;AAM/Ee,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBd,QAAAA,IAAI,EAAEE,OAAO,CAACF,IADK;AAEnBC,QAAAA,IAAI,EAAEC,OAAO,CAACD,IAFK;AAGnBc,QAAAA,QAAQ,EAAE;AAHS,OAAf;AANyE,KAArD,CAAL,CAWnBC,IAXmB,CAWdR,QAAQ,IAAIA,QAAQ,CAACS,IAAT,EAXE,EAYtBD,IAZsB,CAYjBE,MAAM,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAd,MAAAA,QAAQ,CAAC,WAAD,CAAR;AACD,KAfsB,EAgBtBiB,KAhBsB,CAgBhBF,OAAO,CAACG,KAhBQ,CAAvB;AAiBD,GAnBD;;AAqBA,sBAAO;AAAA,4BACL;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,eAEL;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,QAAQ,EAAEjB,aAAxC;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,KAAK,EAAEH,OAAO,CAACF,IAA9C;AAAoD,QAAA,WAAW,EAAC,qBAAhE;AAAsF,QAAA,SAAS,EAAC,GAAhG;AAAoG,QAAA,QAAQ,MAA5G;AAA6G,QAAA,QAAQ,EAAGM,KAAD,IAAW;AAChIH,UAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaF,YAAAA,IAAI,EAAEM,KAAK,CAACiB,MAAN,CAAaC;AAAhC,WAAD,CAAV;AACD;AAFD;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,KAAK,EAAEtB,OAAO,CAACD,IAA9C;AAAoD,QAAA,WAAW,EAAC,mBAAhE;AAAoF,QAAA,SAAS,EAAC,GAA9F;AAAkG,QAAA,QAAQ,MAA1G;AAA2G,QAAA,QAAQ,EAAGK,KAAD,IAAW;AAC9HH,UAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaD,YAAAA,IAAI,EAAEK,KAAK,CAACiB,MAAN,CAAaC;AAAhC,WAAD,CAAV;AACD;AAFD;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK;AAAA,kBAAP;AAaD,CA3CD;;GAAM5B,U;UAGaD,W;;;KAHbC,U;AA6CN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport \"./NewItem.css\";\n\nconst NewRoutine = ({token, isLoggedIn}) => {\n  const blankRoutine = {name: \"\", goal: \"\"};\n  const [routine, setRoutine] = useState(blankRoutine);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n      if(!isLoggedIn) navigate(\"/login\")\n  },[]);\n\n  const createRoutine = async (event) => {\n    event.preventDefault();\n    const response = await fetch(\"http://fitnesstrac-kr.herokuapp.com/api/routines\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        name: routine.name,\n        goal: routine.goal,\n        isPublic: true\n      })\n    }) .then(response => response.json())\n    .then(result => {\n      console.log(result);\n      navigate(\"/routines\");\n    })\n    .catch(console.error);\n  }\n\n  return <>\n    <h1 className=\"pageName\">Create a new routine!</h1>\n    <form  className=\"createForm\" onSubmit={createRoutine}>\n      <input type=\"text\" name=\"name\" value={routine.name} placeholder=\"Name of New Routine\" minLength=\"1\" required onChange={(event) => {\n        setRoutine({...routine, name: event.target.value})\n      }}></input>\n      <input type=\"text\" name=\"goal\" value={routine.goal} placeholder=\"What is the goal?\" minLength=\"1\" required onChange={(event) => {\n        setRoutine({...routine, goal: event.target.value})\n      }}></input>\n      <br />\n      <button type=\"submit\">Create</button>\n    </form>\n  </>\n}\n\nexport default NewRoutine; "]},"metadata":{},"sourceType":"module"}