{"ast":null,"code":"export const fetchUserData = async token => {\n  try {\n    const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/users/me', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n\n  ;\n};\nexport const fetchPublicRoutinesFeaturingActivity = async activityId => {\n  try {\n    await fetch(`https://fitnesstrac-kr.herokuapp.com/api/activities/${activityId}/routines`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n      return result;\n    });\n  } catch (error) {\n    console.log(\"Trouble gathering routines that feature activity\", error);\n  }\n\n  ;\n};\nexport const fetchPublicRoutinesByUser = async username => {\n  await fetch(`https://fitnesstrac-kr.herokuapp.com/api/users/${username}/routines`, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n    return result;\n  }).catch(console.error);\n};\nexport const updateMyRoutine = async (token, routineId) => {\n  const response = await fetch(`http://fitnesstrac-kr.herokuapp.com/api/routines/${routineId}`, {\n    method: \"PATCH\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      name: updatedName,\n      goal: updatedGoal\n    })\n  }).then(response = response.json()).then(result => {\n    console.log(result);\n  }).catch(console.error);\n};\nexport const deleteUserRoutine = async (token, routineId) => {\n  await fetch(`http://fitnesstrac-kr.herokuapp.com/api/routines/${routineId}`, {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n  }).catch(console.error);\n};","map":{"version":3,"sources":["/Users/momyida/Downloads/FitnessTrackrFrontEnd/src/util/index.js"],"names":["fetchUserData","token","response","fetch","headers","result","json","error","console","log","fetchPublicRoutinesFeaturingActivity","activityId","then","fetchPublicRoutinesByUser","username","catch","updateMyRoutine","routineId","method","body","JSON","stringify","name","updatedName","goal","updatedGoal","deleteUserRoutine"],"mappings":"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","sourcesContent":["export const fetchUserData = async (token) => {\n  try {\n    const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/users/me', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    })\n    const result = await response.json()\n    return result\n  } catch (error) {\n    console.log(error)\n  };\n};\n\nexport const fetchPublicRoutinesFeaturingActivity = async (activityId) => {\n  try {\n    await fetch(`https://fitnesstrac-kr.herokuapp.com/api/activities/${activityId}/routines`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }) .then(response => response.json())\n    .then(result => {\n      console.log(result)\n      return result\n    })\n  } catch (error) {\n    console.log(\"Trouble gathering routines that feature activity\", error)\n  };\n};\n\nexport const fetchPublicRoutinesByUser = async (username) => {\n  await fetch(`https://fitnesstrac-kr.herokuapp.com/api/users/${username}/routines`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }) .then(response => response.json())\n  .then(result => {\n    console.log(result)\n    return result\n  })\n  .catch(console.error);\n};\n\nexport const updateMyRoutine = async (token, routineId) => {\n  const response = await fetch (`http://fitnesstrac-kr.herokuapp.com/api/routines/${routineId}`, {\n    method: \"PATCH\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      name: updatedName,\n      goal: updatedGoal\n    })\n  }).then(response = response.json())\n  .then(result => {\n    console.log(result);\n  })\n  .catch(console.error)\n};\n\nexport const deleteUserRoutine = async (token, routineId) => {\n  await fetch(`http://fitnesstrac-kr.herokuapp.com/api/routines/${routineId}`, {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(response => response.json())\n  .then(result => {\n    console.log(result);\n  })\n  .catch(console.error);\n  };"]},"metadata":{},"sourceType":"module"}