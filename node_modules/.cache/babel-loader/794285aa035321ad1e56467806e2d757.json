{"ast":null,"code":"var _jsxFileName = \"/Users/momyida/Downloads/FitnessTrackrFrontEnd/src/Components/NewActivity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport \"./NewItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewActivity = _ref => {\n  _s();\n\n  let {\n    token,\n    isLoggedIn\n  } = _ref;\n  const blankActivity = {\n    name: \"\",\n    description: \"\"\n  };\n  const [activity, setActivity] = useState(blankActivity);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!isLoggedIn) navigate(\"/login\");\n  }, []);\n\n  const createActivity = async event => {\n    try {\n      event.preventDefault();\n      const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/activities', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          name: activity.name,\n          description: activity.description\n        })\n      });\n      console.log(response);\n\n      if (response.ok) {\n        const result = await response.json();\n        console.log(result);\n        navigate(\"/activities\");\n      } else {\n        alert(`Activity with the name ${activity.name} already exists.`);\n      }\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"pageName\",\n      children: \"Create a new activity!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"createForm\",\n      onSubmit: createActivity,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: activity.name,\n        placeholder: \"Name of activity\",\n        minLength: \"1\",\n        required: true,\n        onChange: event => {\n          setActivity({ ...activity,\n            name: event.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        value: activity.description,\n        placeholder: \"Description of activity\",\n        minLength: \"1\",\n        required: true,\n        onChange: event => {\n          setActivity({ ...activity,\n            description: event.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Create Activity \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewActivity, \"2iWclWe5YkUKBrqv2B/JTAJMH/M=\", false, function () {\n  return [useNavigate];\n});\n\n_c = NewActivity;\nexport default NewActivity;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewActivity\");","map":{"version":3,"sources":["/Users/momyida/Downloads/FitnessTrackrFrontEnd/src/Components/NewActivity.js"],"names":["React","useState","useEffect","useNavigate","NewActivity","token","isLoggedIn","blankActivity","name","description","activity","setActivity","navigate","createActivity","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","console","log","ok","result","json","alert","error","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport \"./NewItem.css\";\n\nconst NewActivity = ({token, isLoggedIn}) => {\n  const blankActivity = {name: \"\", description: \"\"};\n  const [activity, setActivity] = useState(blankActivity);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n      if(!isLoggedIn) navigate(\"/login\")\n  },[]);\n\n  const createActivity = async (event) => {\n    try {\n      event.preventDefault();\n      const response = await fetch('http://fitnesstrac-kr.herokuapp.com/api/activities', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          name: activity.name,\n          description: activity.description\n        })\n      }) \n      console.log(response);\n      if(response.ok) {\n        const result = await response.json();\n        console.log(result);\n        navigate(\"/activities\");\n      } else {\n        alert(`Activity with the name ${activity.name} already exists.`);\n      }\n    } catch(error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  return <>\n    <h1 className=\"pageName\">Create a new activity!</h1>\n    <form className=\"createForm\" onSubmit={createActivity}>\n      <input type=\"text\" name=\"name\" value={activity.name} placeholder=\"Name of activity\" minLength=\"1\" required onChange={(event) => {\n        setActivity({...activity, name: event.target.value})\n      }}></input>\n      <input type=\"text\" name=\"description\" value={activity.description} placeholder=\"Description of activity\" minLength=\"1\" required onChange={(event) => {\n        setActivity({...activity, description: event.target.value})\n      }}></input>\n      <br />\n      <button type=\"submit\"> Create Activity </button>\n    </form>\n  </>\n}\n\nexport default NewActivity; "]},"metadata":{},"sourceType":"module"}